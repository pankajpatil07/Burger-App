{"version":3,"sources":["components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.jsx","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","className","children","BurgerIngredient","ingredient","this","type","Component","Burger","console","log","transformedIngredients","Object","keys","map","igkey","Array","_","i","reduce","arr","el","concat","length","buildControl","label","onClick","removed","added","controls","buildControls","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","bacon","meat","cheese","BurgerBuilder","state","ingredients","totalPrice","addIngredientHandler","updateCount","updateIngrediendts","priceAddition","newPrice","setState","removedIngredientHandler","oldCount","priceDeduction","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9d8b8ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\nconst Layout = (props) =>(    \r\n    <>\r\n        <div>Toolbar, SideDrawer, Backdrop</div>\r\n        <main className=\"Content\">\r\n            {props.children}\r\n        </main>\r\n    </>\r\n); \r\nexport default Layout;","import React, { Component } from 'react';\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch(this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n\r\n    }\r\n    return ingredient;\r\n\r\n    }\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = (props) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredient).map(igkey =>{\r\n        return [...Array(props.ingredient[igkey])].map((_,i) => {\r\n             return <BurgerIngredient key={igkey + i} type={igkey}/>;\r\n        });\r\n    } )\r\n    .reduce((arr,el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    if (transformedIngredients.length ===0){\r\n        transformedIngredients = <p>Please start adding ingredients! </p>\r\n    }\r\n    console.log(transformedIngredients);\r\n    return(\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport './BuildControls.css'\r\n\r\nconst controls = [\r\n    {label : 'Salad', type : 'salad'},\r\n    {label : 'Bacon', type : 'bacon'},\r\n    {label : 'Cheese', type : 'cheese'},\r\n    {label : 'Meat', type : 'meat'},\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added ={() => props.ingredientAdded(ctrl.type)}\r\n            removed ={() => props.ingredientRemoved(ctrl.type)}\r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import { Component } from \"react\";\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nconst INGREDIENT_PRICES ={\r\n    salad:0.5,\r\n    bacon :0.47,\r\n    meat : 1.3,\r\n    cheese :0.4\r\n}; \r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        ingredients : {\r\n            salad :0,\r\n            bacon :0,\r\n            cheese:0,\r\n            meat:0 \r\n        },\r\n        totalPrice:4\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount =this.state.ingredients[type];\r\n        const updateCount = oldCount + 1;\r\n        const updateIngrediendts = {\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngrediendts[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice : newPrice, ingredients : updateIngrediendts});\r\n\r\n    }\r\n\r\n    removedIngredientHandler = (type) => {\r\n        const oldCount =this.state.ingredients[type];\r\n        if (oldCount <=0 ){\r\n            return 0;\r\n        }\r\n        const updateCount = oldCount - 1;\r\n        const updateIngrediendts = {\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngrediendts[type] = updateCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice : newPrice, ingredients : updateIngrediendts});\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <Burger ingredient={this.state.ingredients} />\r\n                <BuildControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved={this.removedIngredientHandler}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from \"react\";\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n          <BurgerBuilder/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}